syntax = "proto2";

message SimpleResponse {
required bool ok = 1;
}

message EntityId {
required int64 id = 1;
}

message CreateTeamMsg {
required string name = 1;
required int64 owner = 2;
}

message NamedInfo {
required int64 id = 1;
required string name = 2;
}

message MeetingInfo {
required int64 creator = 1;
required int64 team = 2;

optional string desc = 3;
optional int64 time = 4;
}

message Participating {
required int64 object = 1;
required int64 subject = 2;
}

service BackendService {
rpc CreateTeam (CreateTeamMsg) returns (EntityId);
rpc GetOwnedTeams (EntityId) returns (stream NamedInfo);
rpc GetTeamInfo (EntityId) returns (NamedInfo);
rpc AddTeamMember (Participating) returns (SimpleResponse);

rpc CreateMeeting (MeetingInfo) returns (EntityId);
rpc UpdateMeetingInfo (MeetingInfo) returns (SimpleResponse);
rpc GetOwnedMeetings (EntityId) returns (stream NamedInfo);
rpc AddParticipant (Participating) returns (SimpleResponse);
rpc GetMeetingInfo (EntityId) returns (MeetingInfo);
}